import base64;exec base64.b64decode('import os
import sys
import plugintools
import xbmc , xbmcaddon
from addon . common . addon import Addon
if 64 - 64: i11iIiiIii
OO0o = 'script.module.now_music'
Oo0Ooo = Addon ( OO0o , sys . argv )
O0O0OO0O0O0 = xbmcaddon . Addon ( id = OO0o )
iiiii = O0O0OO0O0O0 . getAddonInfo ( 'icon' )
if 64 - 64: iIIi1iI1II111 + ii11i / oOooOoO0Oo0O
xbmc . executebuiltin ( 'Container.SetViewMode(500)' )
if 10 - 10: IIiI1I11i11
ooOO00oOo = "PL_34_m4eTlaMSONcN_P4r5QFAWAwkngbX"
OOOo0 = "PL_34_m4eTlaOeNd6fP9MspKqh9ksDiNtm"
Oooo000o = "PLLK5DjpAskR68KFNnVgvq5mZHEXTQIyX7"
IiIi11iIIi1Ii = "PL_34_m4eTlaOFcXryY7OFbYGtK5Y1JoIa"
Oo0O = "PL_34_m4eTlaOtJMirQzXvOoAwdechWbhF"
IiI = "PL_34_m4eTlaMf-42RHro2x2UVMHNEkLvD"
ooOo = "PL_34_m4eTlaN5Dj1kIzrJMX95HRBLqeQr"
Oo = "PL1659BED42584319F"
o0O = "PL8FA9A7569EBB5E4A"
IiiIII111iI = "PL_34_m4eTlaPzdgA9RG_BlIImsUwCVkzy"
IiII = "PL_34_m4eTlaNHt6GM5dOnraJ2zdE4R2Z_"
iI1Ii11111iIi = "PLO47Lo58fyaJTRmPSH3eIx4R92WngXEeu"
i1i1II = "PLBB7D0AF873F8FAEA"
O0oo0OO0 = "PL912C2772F94A73F9"
I1i1iiI1 = "PL_IGfDhmSGBMtrZrP0X440vgv5iBRfhy4"
iiIIIII1i1iI = "PL6CDBDD2A3C0D55A5"
o0oO0 = "PLziBTZqySBRFOFOwbSuPn4GtockoGot7k"
oo00 = "PLDouWbMQEftHiTge92lMQFgbNVUCBlP8E"
o00 = "PLDouWbMQEftFRzud9bJO0Yg03R6TaJoL3"
Oo0oO0ooo = "PLDouWbMQEftHqrKjdu7cFSACIudT2n5Il"
o0oOoO00o = "PL_34_m4eTlaNLsqqXEC3D-QPlMpgGqrFy"
i1 = "PL6A8E66F870D64825"
oOOoo00O0O = "PL_34_m4eTlaMDLrSesIGNfArzdqbV9PtO"
i1111 = "PL_34_m4eTlaOcF4HOTM5_u7WEz5UOknPc"
i11 = "PL_34_m4eTlaP6n2tYDBKamuvoQDo89a97"
I11 = "PL_34_m4eTlaOoOkgbOgS93OFQ9QxTPJYP"
Oo0o0000o0o0 = "PL_34_m4eTlaMBcJhd_fEj-QBpb8P89F28"
oOo0oooo00o = "PL_34_m4eTlaN1pIJXJpatZyWCnQgPr_nU"
oO0o0o0ooO0oO = "PL_34_m4eTlaOh7AX4GJRnnxKgJ5n9_V-M"
oo0o0O00 = "PL_34_m4eTlaMnTgbpMYRKfReUqZw1LRuJ"
oO = "PLuDr0us3k-BveJdm67f8SlDt87aRtyZ2r"
i1iiIIiiI111 = "PL_34_m4eTlaMMi2E-nHwk4OdRi3OJQ78b"
oooOOOOO = "PL_34_m4eTlaMO4Mz_dWge1XC9K2uhXThR"
i1iiIII111ii = "PL_34_m4eTlaPl5bRHTsf1kogkcS80LiEi"
i1iIIi1 = "PL1F0D80E99F7850E5"
ii11iIi1I = "PL_34_m4eTlaOryUpz8B44gf1tyxsyEJL1"
iI111I11I1I1 = "PLDouWbMQEftGj0O3468TrleWCTMTJrS20"
OOooO0OOoo = "PLDouWbMQEftGzuFV8LqaBidN4Nr3WGWLk"
iIii1 = "PL_34_m4eTlaPcjuqnypKfhVVpHKmT4yxH"
oOOoO0 = "PL_34_m4eTlaOg18XvgjqGTvFtX26QqIui"
O0OoO000O0OO = "PL_34_m4eTlaOakp50tDGnTQ2fwt4U8ewy"
iiI1IiI = "PL_34_m4eTlaM_-9ciPXJA33ncF322YWA5"
II = "PL_34_m4eTlaPSdTUlEYBLM4ewrck1RDvh"
ooOoOoo0O = "PLwNBYqY3GP2f9DZr6XdDgW8VwyPEX9bm7"
OooO0 = "PLMw8cPF2uPc6eneUtoFamsrvGGZlF2uqL"
II11iiii1Ii = "PLDouWbMQEftEHpZkhMpIwlWz1iE96HbQq"
OO0oOoo = "PLDouWbMQEftFtfaMjEM-9IjipNjw7qJ5W"
O0o0Oo = "PLDouWbMQEftH195uyZ0SlBVSznM61I8J3"
Oo00OOOOO = "PLDouWbMQEftHe0rKzAJPb7MGltCPtFxNs"
O0O = "PLgK4BjZPsT825ISNA4dWqsnUuUQEfHZEu"
O00o0OO = "PLDouWbMQEftHJSvaRvBzvFZ4S34kucnwl"
I11i1 = "PLDouWbMQEftF5HyM_lheKxX38sRZdcdfR"
iIi1ii1I1 = "PLDouWbMQEftEasB5KoU8faJqOQVCOq810"
o0 = "PLDouWbMQEftEcdNjhvM5YeVvXSl9nxOaU"
I11II1i = "PL8Mowahw6-au9odO_rwNnWcxgdTdNVr_3"
IIIII = "PLDouWbMQEftF-RQMo2YsYzrR_ZByg947D"
ooooooO0oo = "PLDouWbMQEftEcdNjhvM5YeVvXSl9nxOaU"
IIiiiiiiIi1I1 = "PLDouWbMQEftEDrxxz3VoXIEfiQbYeOJ2l"
I1IIIii = "PLDouWbMQEftEAJUcUYopDaqCbcmMIlIMl"
oOoOooOo0o0 = "PLDouWbMQEftHqvpVkKeBiPszLECporRWe"
OOOO = "PLDouWbMQEftEvDn_oWxYCOOcbLk86TJTV"
OOO00 = "PLDouWbMQEftGij9_IK8pIwRZ9wf0rcYc9"
iiiiiIIii = "PLDouWbMQEftFRdgKkRkFOvCi69YxICjzI"
O000OO0 = "PLDouWbMQEftEEeKB6GcLaDQbypvob4e10"
I11iii1Ii = "PLDouWbMQEftHfSufbFaP1N5UvSZwuBQxj"
I1IIiiIiii = "PLDouWbMQEftEXRa9q30waTahj7mpRrttU"
O000oo0O = "PLDouWbMQEftEylNuZbUaDdnjEVb4K8NXk"
OOOOi11i1 = "PLDouWbMQEftFPAozxK35cermZl8JmEm6w"
IIIii1II1II = "PLDouWbMQEftH05DjkYFT35ubDtJ9-EDAQ"
i1I1iI = "PLDouWbMQEftFLmCbJNnxBqo925x89tJci"
oo0OooOOo0 = "PLDouWbMQEftE3cvxvmmZbmb5LHFSqquC2"
o0OO00oO = "PLDouWbMQEftHVApkssY45f20pBKQkubda"
I11i1I1I = "PLDouWbMQEftE3qNQFpHbwtds_fClgrosx"
oO0Oo = "PLDouWbMQEftHbsC27ysUWGw4OxnKwgmSI"
oOOoo0Oo = "PLDouWbMQEftGxi1_JHCEMj0Mg6xu8ofTS"
o00OO00OoO = "PLDouWbMQEftGppOc9H3k4OblZt7AkFJIe"
OOOO0OOoO0O0 = "PLDouWbMQEftFwkKFJg_dqrNZmViR_5Vpw"
O0Oo000ooO00 = "PLDouWbMQEftGm-SYQFcZgSkl5Xsoi6ec3"
oO0 = "PLDouWbMQEftG7H9iL5_e-05Qln6eOHzhJ"
Ii1iIiII1ii1 = "PLDouWbMQEftFo66cP_Slk1oCoVZRVPQae"
ooOooo000oOO = "PLDouWbMQEftGIy9zgfcIK_T0Qt0J_VJ5C"
Oo0oOOo = "PLDouWbMQEftHsFyHSBua-RZLFsx--Cu4U"
Oo0OoO00oOO0o = "PLDouWbMQEftFfvSiP-qJnSRplBPtP9V0b"
OOO00O = "PLDouWbMQEftFtXgRrax8PJPPC1gdQIJ70"
OOoOO0oo0ooO = "PLDouWbMQEftGVhou1WEt7puGQOB7Ieiqw"
O0o0O00Oo0o0 = "PLDouWbMQEftGnfnnc1hgtKo47JFFZO43A"
O00O0oOO00O00 = "PLDouWbMQEftFoFXgF3j3d-2ViUyC8KXxV"
i1Oo00 = "PLDouWbMQEftEpPsQuisDX830NEqIg6pLB"
i1i = "PLDouWbMQEftE9awijXpVSoSbRho30vX8Z"
iiI111I1iIiI = "PL1CAE497B646AD1A6"
IIIi1I1IIii1II = "PL729690CF3DC4038B"
O0 = "PL91AE51E5AD495C42"
ii1ii1ii = "PL395E7954B52B4822"
oooooOoo0ooo = "PLoDgQlTbBQzbdvhDlUw9NY4IW-RgpZ62E"
I1I1IiI1 = "PL_34_m4eTlaP1Oisln8FWSQ-uJfb-jJfO"
III1iII1I1ii = "PL_34_m4eTlaN0b1Wntb0io2m_j0Bbe1Id"
oOOo0 = "PLSdyzYAdoCmdg6CPd_qvN1ycm9DcOeNBx"
oo00O00oO = "PL_34_m4eTlaNQBMQYxfxQLN7eUkIKP66y"
iIiIIIi = "PLQa1P8Aw9Jz9u3H6qDnSMz91HFK05u8Qi"
ooo00OOOooO = "PLCyMOjFkWxz0x7YHwWgdkqCB4BZSOYlVu"
O00OOOoOoo0O = "PL_34_m4eTlaNLWS-34FVBlr8ZnlTUFkiV"
O000OOo00oo = "PL_34_m4eTlaMs7Q4Imtz199e2K4agqwyP"
oo0OOo = "PL_34_m4eTlaNh63gxFpUwwAROXj5V3AX8"
ooOOO00Ooo = "PL_34_m4eTlaMFVmKb3lBxVKMWkGXUKG9g"
IiIIIi1iIi = "PL_34_m4eTlaPXh3wyeVKGJJvjJtZ-kJXY"
ooOOoooooo = "PLf8Oo47thU_O5ZvVPjAymfbAHZt3Tgr9m"
II1I = "PLUSRfoOcUe4aJ_afJI6Iw_d-IMx16iwnH"
O0i1II1Iiii1I11 = "PLUSRfoOcUe4YctgFFjWQqhbndPAX0eJ8c"
IIII = "PLCJyoxQW5ieKzjL8MH3qyvR1Kf6jT2_Rn"
iiIiI = "PLF73D80737572C687"
o00oooO0Oo = "PL_34_m4eTlaNZnmJKJqLfslC2oW3kNKWK"
o0O0OOO0Ooo = "PLft313ngIElbbRJBRLtnP59MUOuo24kGr"
iiIiII1 = "PLHHnmhLfwSsaZzrbBUH_N0WB6cZFFeJ41"
OOO00O0O = "PL_34_m4eTlaP5cyIG-2hUcqF2bZxHgZlZ"
iii = "PL_34_m4eTlaMgClOUihGU5EKM0md93FCN"
oOooOOOoOo = "PL_34_m4eTlaOrcFRHD9mG4zUilcXQS8uB"
i1Iii1i1I = "PLsdPA0A_fKLmuHNuafb76kecjHqeGoBLs"
OOoO00 = "PLF0A9B9128F4397BD"
IiI111111IIII = "PL_34_m4eTlaPLkaa4gLSJsWm86Z0H8i_U"
i1Ii = "PL_34_m4eTlaO64lWBQeC7xfmlA9uKvS4G"
ii111iI1iIi1 = "PLXAN7tYrZq7drpFeMFFn7CNzkF-FUVIBh"
OOO = "PLUSRfoOcUe4ZHOPA0YgBcbwAVkJQ52HH_"
oo0OOo0 = "PLBBC3BAC472A1020F"
I11IiI = "PLnknRVaLM8J_02U2zaSzX_9wvfmctT1Xe"
O0ooO0Oo00o = "PLEE1730DB6C1BDCB4"
ooO0oOOooOo0 = "PL_34_m4eTlaO8Wj-65W7BioLh50i_4Mzs"
i1I1ii11i1Iii = "PL_34_m4eTlaMA1WFX92nvR5NK1Z4dc42M"
I1IiiiiI = "PLfXJnC0pregyWgUZzmnzasnwxhCZw0uqK"
o0OIiII = "PLflvWSBDC77jVrR_6MzUHBsITaIxn4jZ8"
ii1iII1II = "PLKfO_IEZedrhfX21ih0rSRzLKPMFnsPcx"
Iii1I1I11iiI1 = "PLC9uHuoWKsDwFs_bLjU1Xf9kK032tIukr"
I1I1i1I = "PLsdPA0A_fKLlogBKy9a0UsGUngUm2Nu7O"
ii1I = "PLhXCO9UQq4zoQqKhzC4PFFOvXmDxcyx8k"
O0oO0 = "PL_34_m4eTlaNf6TSaM9IfLd13R1lKaoYd"
oO0O0OO0O = "PLLSpW9sLtkFw4rm3wR0B5rBABwnbFeGgN"
OO = "PLXAN7tYrZq7cQqXfyVuKD4hc524gKRAcF"
OoOoO = "PLDouWbMQEftGeW4nDtg-ic6493NQ2MeVx"
Ii1I1i = "PLhXCO9UQq4zrjUkodCHGnDQ3icGWhDQU2"
OOI1iI1ii1II = "PLhXCO9UQq4zrtKJCVk0iALxcwMsCiJ2TP"
O0O0OOOOoo = "PLhXCO9UQq4zo_GMFSjjrusmMkunHv8JwW"
oOooO0 = "PLhXCO9UQq4zqGAVwUMwgUnfkBd7rpLER9"
Ii1I1Ii = "PLhXCO9UQq4zrW1Aj099Nq3oyqTn_UJ6cq"
OOoO0 = "PLhXCO9UQq4zoIJY4qa1UA_WQWuwS-y2bc"
OO0Oooo0oOO0O = "PLhXCO9UQq4zpkrikCbJ8b0M39MiqC3P0G"
o00O0 = "PLp1RWC3HLNlFF_feELCfRaG7JxJGdUr99"
oOO0O00Oo0O0o = "PL_34_m4eTlaPorC89EUOQxwhXeZxd-Hc7"
ii1 = "PL_34_m4eTlaMaiHbxdGrxy8AdgHtUezSO"
I1iIIiiIIi1i = "PL_34_m4eTlaMnl1WrUx3FjpJUlCWpApmR"
O0O0ooOOO = "PL_34_m4eTlaN6hX-sJcrJCJvRL4pSrPx0"
oOOo0O00o = "PL_34_m4eTlaMnlJjHHCOyEK0jDM7_dHQ5"
iIiIi11 = "PL_34_m4eTlaPc_CPB-hrNUzBQF4bFOHWd"
if 87 - 87: IIiii . I1ii / IIIii1I - iI * o0O000OO * ooO0o00o
# Entry point
def oO00oOOoooO ( ) :
 plugintools . log ( "docu.run" )
 if 46 - 46: I11iI1i1I11I11 - i11I1IiII1i1i % ii1I1 * OooooOOoo0
 if 35 - 35: OOooOo0ooo % i1ii1I1111ii1 % iIiI1
 oOo0OOoO0 = plugintools . get_params ( )
 if 11 - 11: O00Oo0 . OOOOo0o00OO0000 / I11iI1i1I11I11 . OOOOo0o00OO0000 . IIiii
 if oOo0OOoO0 . get ( "action" ) is None :
  O00Oooo ( oOo0OOoO0 )
 else :
  i11I = oOo0OOoO0 . get ( "action" )
  exec i11I + "(params)"
  if 76 - 76: iIiI1 * i1ii1I1111ii1
 plugintools . close_item_list ( )
 if 52 - 52: ii1I1
 if 19 - 19: I1ii
def O00Oooo ( params ) :
 plugintools . log ( "docu.main_list " + repr ( params ) )
 if 25 - 25: OOooOo0ooo / OOOOo0o00OO0000
 plugintools . add_item (

 title = "Now 100" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIiIi11 + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2018/04/now_100_stadium300dp.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 31 - 31: ii1I1 . iIIi1iI1II111 % I1ii . ooO0o00o + iIiI1
 plugintools . add_item (

 title = "Now 99" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1iIIiiIIi1i + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61TZvOO4YEL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 71 - 71: O00Oo0 . IIiii
 plugintools . add_item (

 title = "Now 98" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii1 + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/81G3wMbIFYL._SL1500_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 62 - 62: oOooOoO0Oo0O . OooooOOoo0
 plugintools . add_item (

 title = "Now 97" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOO0O00Oo0O0o + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2017/06/now97_RESORT_300dpi_layers.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 61 - 61: o0O000OO - ii1I1 - IIiI1I11i11
 plugintools . add_item (

 title = "Now 96" ,
 url = "plugin://plugin.video.youtube/playlist/" + o00O0 + "/" ,
 thumbnail = "http://img.hmv.co.jp/image/jacket/400/77/2/3/779.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 25 - 25: iIIi1iI1II111 * OooooOOoo0 + I11iI1i1I11I11 . ooO0o00o . ooO0o00o
 plugintools . add_item (

 title = "Now 95" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii1I + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61kYfyTJOQL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 58 - 58: I1ii
 plugintools . add_item (

 title = "Now 94" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii1iII1II + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2016/08/NOW_94.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 53 - 53: IIiI1I11i11
 plugintools . add_item (

 title = "Now 93" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOo + "/" ,
 thumbnail = "http://www.officialcharts.com/media/650017/now-93-artwork.png?width=488.07157057654075&height=500" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 59 - 59: ooO0o00o
 plugintools . add_item (

 title = "Now 92" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiIi11iIIi1Ii + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/20150923101439/now92GROTTO_HR-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 81 - 81: o0O000OO - o0O000OO . i1ii1I1111ii1
 plugintools . add_item (

 title = "Now 91" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiI + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/20150611093502/now-91-CYMK-FINAL-HR-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 73 - 73: OooooOOoo0 % i11iIiiIii - I1ii
 plugintools . add_item (

 title = "Now 90" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiII + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/0/01/Now_90_UK_Cover.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 7 - 7: iIIi1iI1II111 * i11iIiiIii * OOooOo0ooo + OOOOo0o00OO0000 % iI - OOOOo0o00OO0000
 plugintools . add_item (

 title = "Now 89" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0O + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOW-89-Final-Artwork-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 39 - 39: IIIii1I * ii1I1 % ii1I1 - oOooOoO0Oo0O + ooO0o00o - OooooOOoo0
 plugintools . add_item (

 title = "Now 88" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiiIII111iI + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/8/84/Now_88_UK_Cover.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 23 - 23: i11iIiiIii
 plugintools . add_item (

 title = "Now 87" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oooo000o + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/now_87_EGG_final-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 30 - 30: ooO0o00o - IIiI1I11i11 % IIiii + OooooOOoo0 * ii11i
 plugintools . add_item (

 title = "Now 86" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1i1iiI1 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/now86NEW_FINAL-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 81 - 81: iIiI1 % IIiI1I11i11 . ii11i
 plugintools . add_item (

 title = "Now 85" ,
 url = "plugin://plugin.video.youtube/playlist/" + iI1Ii11111iIi + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Pack-shot2-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 4 - 4: i11iIiiIii % iI % IIiI1I11i11 / iIiI1
 plugintools . add_item (

 title = "Now 84" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOO00oOo + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/81087xfVSDL._SL1500_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 6 - 6: i1ii1I1111ii1 / I1ii % ii1I1 - I1ii
 plugintools . add_item (

 title = "Now 83" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOOo0 + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2016/08/NOW_83.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 31 - 31: ii1I1
 plugintools . add_item (

 title = "Now 82" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0oo0OO0 + "/" ,
 thumbnail = "http://tshop.r10s.com/3dc/0b1/5e1c/4b6d/20d8/3df1/8455/112ce49d9a005056b75a2f.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 23 - 23: O00Oo0 . iIiI1
 plugintools . add_item (

 title = "Now 81" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0O + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/now-81.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 92 - 92: o0O000OO + O00Oo0 * OOooOo0ooo % I1ii
 plugintools . add_item (

 title = "Now 80" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1i1II + "/" ,
 thumbnail = "http://i47.tinypic.com/o360l.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 42 - 42: IIIii1I
 plugintools . add_item (

 title = "Now 79" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOW79_F_flop_CYMK-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 76 - 76: I1ii * i1ii1I1111ii1 % O00Oo0
 plugintools . add_item (

 title = "Now 78" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiIIIII1i1iI + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/3/3b/Now78UK.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 57 - 57: ii11i - IIiI1I11i11 / O00Oo0 - iIIi1iI1II111 * oOooOoO0Oo0O % IIiii
 plugintools . add_item (

 title = "Now 77" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0oO0 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/N77snowboardYEL-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 68 - 68: oOooOoO0Oo0O * OooooOOoo0 % o0O000OO - iIiI1
 plugintools . add_item (

 title = "Now 76" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo00 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now76HR-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 34 - 34: O00Oo0 . ii11i * o0O000OO * i11I1IiII1i1i / O00Oo0 / I11iI1i1I11I11
 plugintools . add_item (

 title = "Now 75" ,
 url = "plugin://plugin.video.youtube/playlist/" + o00 + "/" ,
 thumbnail = "http://www.covershut.com/covers/NOW-Thats-What-I-Call-Music!-75-2010-Front-Cover-37348.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 78 - 78: IIIii1I - ooO0o00o / o0O000OO
 plugintools . add_item (

 title = "Now 74" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0oO0ooo + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/now74Sflakes_final-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 10 - 10: i1ii1I1111ii1 + IIIii1I * I11iI1i1I11I11 + ii11i / O00Oo0 / I11iI1i1I11I11
 plugintools . add_item (

 title = "Now 73" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0oOoO00o + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/N73_FINAL_HR-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 42 - 42: I1ii
 plugintools . add_item (

 title = "Now 72" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-72-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 38 - 38: ii1I1 + IIiii % OOOOo0o00OO0000 % o0O000OO - OOooOo0ooo / oOooOoO0Oo0O
 plugintools . add_item (

 title = "Now 71" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOoo00O0O + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-71-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 73 - 73: ooO0o00o * iIIi1iI1II111 - i11iIiiIii
 plugintools . add_item (

 title = "Now 70" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1111 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-70-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 85 - 85: OOooOo0ooo % i1ii1I1111ii1 + OooooOOoo0 / ooO0o00o . i11I1IiII1i1i + ii1I1
 plugintools . add_item (

 title = "Now 69" ,
 url = "plugin://plugin.video.youtube/playlist/" + i11 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-69-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 62 - 62: i11iIiiIii + i11iIiiIii - ooO0o00o
 plugintools . add_item (

 title = "Now 68" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11 + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61tRYeXQQCL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 28 - 28: i1ii1I1111ii1 . i1ii1I1111ii1 % ii11i * ii11i . ooO0o00o / i1ii1I1111ii1
 plugintools . add_item (

 title = "Now 67" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0o0000o0o0 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-67-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 27 - 27: iI + OOOOo0o00OO0000 - IIiI1I11i11
 plugintools . add_item (

 title = "Now 66" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOo0oooo00o + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-66-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 69 - 69: iIiI1 - iIIi1iI1II111 % I11iI1i1I11I11 + i11iIiiIii . o0O000OO / iI
 plugintools . add_item (

 title = "Now 65" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO0o0o0ooO0oO + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-65-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 79 - 79: iIIi1iI1II111 * i11iIiiIii - iIiI1 / iIiI1
 plugintools . add_item (

 title = "Now 64" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo0o0O00 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-64-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 48 - 48: iIIi1iI1II111
 plugintools . add_item (

 title = "Now 63" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/a/ae/Now_63.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 93 - 93: i11iIiiIii - I1ii * I11iI1i1I11I11 * OooooOOoo0 % iIIi1iI1II111 + oOooOoO0Oo0O
 plugintools . add_item (

 title = "Now 62" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1iiIIiiI111 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-62-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 25 - 25: iIiI1 + OOooOo0ooo / OOOOo0o00OO0000 . ooO0o00o % iIIi1iI1II111 * iI
 plugintools . add_item (

 title = "Now 61" ,
 url = "plugin://plugin.video.youtube/playlist/" + oooOOOOO + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-61.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 84 - 84: OOOOo0o00OO0000 % OOooOo0ooo + i11iIiiIii
 plugintools . add_item (

 title = "Now 60" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1iiIII111ii + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-60-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 28 - 28: IIIii1I + iI * ii1I1 % i11I1IiII1i1i . OooooOOoo0 % iIIi1iI1II111
 plugintools . add_item (

 title = "Now 59" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1iIIi1 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-59-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 16 - 16: OooooOOoo0 - ii11i / I1ii . IIiii + ii11i
 plugintools . add_item (

 title = "Now 58" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii11iIi1I + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-58-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 19 - 19: iI - IIIii1I . iIIi1iI1II111
 plugintools . add_item (

 title = "Now 57" ,
 url = "plugin://plugin.video.youtube/playlist/" + iI111I11I1I1 + "/" ,
 thumbnail = "https://photos.prnewswire.com/prnvar/20160105/319490" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 60 - 60: IIiii + IIIii1I
 plugintools . add_item (

 title = "Now 56" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOooO0OOoo + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/91QvXvWXU1L._SY355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 9 - 9: OOOOo0o00OO0000 * oOooOoO0Oo0O - ii11i + o0O000OO / iI . iI
 plugintools . add_item (

 title = "Now 55" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIii1 + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/71kFlRrz8aL._SX355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 49 - 49: IIiii
 plugintools . add_item (

 title = "Now 54" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOoO0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/5/52/Now_54.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 25 - 25: oOooOoO0Oo0O - I1ii . I1ii * i11I1IiII1i1i
 plugintools . add_item (

 title = "Now 53" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0OoO000O0OO + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/412FDQA1D8L.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 81 - 81: i1ii1I1111ii1 + iIiI1
 plugintools . add_item (

 title = "Now 52" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiI1IiI + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/4136FCVV5JL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 98 - 98: I1ii
 plugintools . add_item (

 title = "Now 51" ,
 url = "plugin://plugin.video.youtube/playlist/" + II + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/41G5J0WNRBL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 95 - 95: OOOOo0o00OO0000 / OOOOo0o00OO0000
 plugintools . add_item (

 title = "Now 50" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOoOoo0O + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/71Dfvb2-hSL._SL1175_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 30 - 30: I11iI1i1I11I11 + IIIii1I / IIIii1I % I11iI1i1I11I11 . I11iI1i1I11I11
 plugintools . add_item (

 title = "Now 49" ,
 url = "plugin://plugin.video.youtube/playlist/" + OooO0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/1/11/Now_49.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 55 - 55: OOOOo0o00OO0000 - OooooOOoo0 + IIiii + i1ii1I1111ii1 % OOooOo0ooo
 plugintools . add_item (

 title = "Now 48" ,
 url = "plugin://plugin.video.youtube/playlist/" + II11iiii1Ii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/2/20/Now_48.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 41 - 41: IIiI1I11i11 - OooooOOoo0 - OOooOo0ooo
 plugintools . add_item (

 title = "Now 47" ,
 url = "plugin://plugin.video.youtube/playlist/" + OO0oOoo + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/81ynokvm4ML._SL1500_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 8 - 8: iI + O00Oo0 - ooO0o00o % IIIii1I % ooO0o00o * i11I1IiII1i1i
 plugintools . add_item (

 title = "Now 46" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0o0Oo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/c/c0/Now_46.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 9 - 9: IIIii1I - i11iIiiIii - ii1I1 * OOooOo0ooo + OOOOo0o00OO0000
 plugintools . add_item (

 title = "Now 45" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo00OOOOO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/3/36/Now_45.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 44 - 44: IIiii
 plugintools . add_item (

 title = "Now 44" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0O + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/6/60/Now_44.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 52 - 52: I11iI1i1I11I11 - IIIii1I + I11iI1i1I11I11 % ooO0o00o
 plugintools . add_item (

 title = "Now 43" ,
 url = "plugin://plugin.video.youtube/playlist/" + O00o0OO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/f/ff/Now_43.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 35 - 35: ii11i
 plugintools . add_item (

 title = "Now 42" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11i1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/c/c7/Now_42.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 42 - 42: O00Oo0 . I1ii . IIiI1I11i11 + o0O000OO + ii1I1 + I1ii
 plugintools . add_item (

 title = "Now 41" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIi1ii1I1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/d/d6/Now_41.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 31 - 31: i1ii1I1111ii1 . ii1I1 - OOOOo0o00OO0000 . oOooOoO0Oo0O / oOooOoO0Oo0O
 plugintools . add_item (

 title = "Now 40" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/5/56/Now_40.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 56 - 56: iI / i11I1IiII1i1i / i11iIiiIii + oOooOoO0Oo0O - IIIii1I - OooooOOoo0
 plugintools . add_item (

 title = "Now 39" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11II1i + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/e/e8/Now_39.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 21 - 21: iIIi1iI1II111 % iIiI1 . I1ii / IIiii + iIiI1
 plugintools . add_item (

 title = "Now 38" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIIII + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-38-1024x1024.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 53 - 53: i11I1IiII1i1i - I1ii - i11I1IiII1i1i * i1ii1I1111ii1
 plugintools . add_item (

 title = "Now 37" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooooooO0oo + "/" ,
 thumbnail = "http://cps-static.rovicorp.com/3/JPG_400/MI0002/367/MI0002367718.jpg?partner=allrovi.com" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 71 - 71: iIIi1iI1II111 - ii11i
 plugintools . add_item (

 title = "Now 36" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIiiiiiiIi1I1 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/e/ef/Now_36.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 12 - 12: ii1I1 / ooO0o00o
 plugintools . add_item (

 title = "Now 35" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1IIIii + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-35-1024x1003.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 42 - 42: IIIii1I
 plugintools . add_item (

 title = "Now 34" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOoOooOo0o0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/a/a6/Now_34.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 19 - 19: i11I1IiII1i1i % I11iI1i1I11I11 * ii11i + I1ii
 plugintools . add_item (

 title = "Now 33" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOOO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/d/d6/Now_33.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 46 - 46: IIIii1I
 plugintools . add_item (

 title = "Now 32" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOO00 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-32-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 1 - 1: i1ii1I1111ii1
 plugintools . add_item (

 title = "Now 31" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiiiiIIii + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/1/15/Now_31.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 97 - 97: ii1I1 + i1ii1I1111ii1 + iIIi1iI1II111 + i11iIiiIii
 plugintools . add_item (

 title = "Now 30" ,
 url = "plugin://plugin.video.youtube/playlist/" + O000OO0 + "/" ,
 thumbnail = "http://cdn.hitfix.com/photos/71216/Now30Front_rz_img_featured_photo_gallery.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 77 - 77: ooO0o00o / oOooOoO0Oo0O
 plugintools . add_item (

 title = "Now 29" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11iii1Ii + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-29-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 46 - 46: ooO0o00o % ii11i . i1ii1I1111ii1 % i1ii1I1111ii1 + i11iIiiIii
 plugintools . add_item (

 title = "Now 28" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1IIiiIiii + "/" ,
 thumbnail = "http://images.coveralia.com/audio/n/Now_28--Frontal.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 72 - 72: ii11i * OOooOo0ooo % OOOOo0o00OO0000 / iI
 plugintools . add_item (

 title = "Now 27" ,
 url = "plugin://plugin.video.youtube/playlist/" + O000oo0O + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/8/80/Now_That's_What_I_Call_Music!_27_(UK_series)_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 35 - 35: OOOOo0o00OO0000 + IIiI1I11i11 % I11iI1i1I11I11 % OooooOOoo0 + i11I1IiII1i1i
 plugintools . add_item (

 title = "Now 26" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOOOi11i1 + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/41cCLInJypL._SX355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 17 - 17: IIiI1I11i11
 plugintools . add_item (

 title = "Now 25" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIIii1II1II + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/61TH%2BnVIC2L._SY300_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 21 - 21: IIIii1I
 plugintools . add_item (

 title = "Now 24" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1I1iI + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/7/7e/Now_24.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 29 - 29: OooooOOoo0 / IIiii / OOOOo0o00OO0000 * ii1I1
 plugintools . add_item (

 title = "Now 23" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo0OooOOo0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/4/40/Now_23.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 10 - 10: O00Oo0 % iIiI1 * iIiI1 . OooooOOoo0 / OOooOo0ooo % ii1I1
 plugintools . add_item (

 title = "Now 22" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0OO00oO + "/" ,
 thumbnail = "http://www.music-bazaar.com/album-images/vol1/96/96327/612368-big/Now-That-S-What-I-Call-Music-22-cover.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 49 - 49: iI / i11I1IiII1i1i + iIIi1iI1II111 * ooO0o00o
 plugintools . add_item (

 title = "Now 21" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11i1I1I + "/" ,
 thumbnail = "http://www.yosmusic.com/wp-content/uploads/2016/02/Now-21-%D7%97%D7%93%D7%A9.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 28 - 28: OOOOo0o00OO0000 + i11iIiiIii / OooooOOoo0 % o0O000OO % IIIii1I - iIIi1iI1II111
 plugintools . add_item (

 title = "Now 20" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO0Oo + "/" ,
 thumbnail = "http://www.room512.co.uk/images/now20.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 54 - 54: IIiI1I11i11 + IIiii
 plugintools . add_item (

 title = "Now 19" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOoo0Oo + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/61AMZA9HKDL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 83 - 83: I11iI1i1I11I11 - I1ii + ii1I1
 plugintools . add_item (

 title = "Now 18" ,
 url = "plugin://plugin.video.youtube/playlist/" + o00OO00OoO + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowisrael18.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 5 - 5: OOooOo0ooo
 plugintools . add_item (

 title = "Now 17" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOOO0OOoO0O0 + "/" ,
 thumbnail = "https://img.discogs.com/AI9aCdXda5ZHMIK5udv3OBGQb7g=/fit-in/552x471/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-402320-1492808446-7886.jpeg.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 46 - 46: iIiI1
 plugintools . add_item (

 title = "Now 16" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0Oo000ooO00 + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowisrael16.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 45 - 45: OOOOo0o00OO0000
 plugintools . add_item (

 title = "Now 15" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO0 + "/" ,
 thumbnail = "http://cps-static.rovicorp.com/3/JPG_400/MI0000/410/MI0000410973.jpg?partner=allrovi.com" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 21 - 21: i11I1IiII1i1i . O00Oo0 . ii1I1 / IIIii1I / O00Oo0
 plugintools . add_item (

 title = "Now 14" ,
 url = "plugin://plugin.video.youtube/playlist/" + Ii1iIiII1ii1 + "/" ,
 thumbnail = "http://destinyxnowmusic.freehostia.com/nowmusic/nowisrael14.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 17 - 17: ii1I1 / ii1I1 / OooooOOoo0
 plugintools . add_item (

 title = "Now 13" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOooo000oOO + "/" ,
 thumbnail = "https://agencyspace.files.wordpress.com/2013/01/13.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 1 - 1: IIiI1I11i11 . i11iIiiIii % ii1I1
 plugintools . add_item (

 title = "Now 12" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0oOOo + "/" ,
 thumbnail = "http://streamd.hitparade.ch/cdimages/-now_thats_what_i_call_music_12_[us]_a.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 82 - 82: ii11i + IIIii1I . ii11i % iIiI1 / OOooOo0ooo . OOooOo0ooo
 plugintools . add_item (

 title = "Now 11" ,
 url = "plugin://plugin.video.youtube/playlist/" + Oo0OoO00oOO0o + "/" ,
 thumbnail = "http://media.israel-music.com/images/27932721.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 14 - 14: ooO0o00o . ii1I1 . OooooOOoo0 + oOooOoO0Oo0O - ii1I1 + iIiI1
 plugintools . add_item (

 title = "Now 10" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOO00O + "/" ,
 thumbnail = "https://s-media-cache-ak0.pinimg.com/originals/fd/42/ce/fd42ce7d62e239aee09b7e33f0fc4e93.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 9 - 9: OOooOo0ooo
 plugintools . add_item (

 title = "Now 9" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOoOO0oo0ooO + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/1/14/Now_9_United_Kingdom.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 59 - 59: I1ii * IIiii . iIIi1iI1II111
 plugintools . add_item (

 title = "Now 8" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0o0O00Oo0o0 + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/a/aa/Now_8_United_Kingdom.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 56 - 56: OOooOo0ooo - i1ii1I1111ii1 % I1ii - ooO0o00o
 plugintools . add_item (

 title = "Now 7" ,
 url = "plugin://plugin.video.youtube/playlist/" + O00O0oOO00O00 + "/" ,
 thumbnail = "https://1.bp.blogspot.com/-cN7SNiV1Q78/URbukLXnc2I/AAAAAAAAKPg/aGBVmrO1Ev4/s1600/Now+That%27s+What+I+Call+Music+7+1986.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 51 - 51: iIIi1iI1II111 / OOOOo0o00OO0000 * ii11i + I11iI1i1I11I11 + ooO0o00o
 plugintools . add_item (

 title = "Now 6" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1Oo00 + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/818bzGDAdjL._SY355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 98 - 98: ii11i * I11iI1i1I11I11 * ii1I1 + OOOOo0o00OO0000 % i11iIiiIii % iIIi1iI1II111
 plugintools . add_item (

 title = "Now 5" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1i + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/1/1b/Now_5.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 27 - 27: iIIi1iI1II111
 plugintools . add_item (

 title = "Now 4" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiI111I1iIiI + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-4-high-res-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 79 - 79: ooO0o00o - OooooOOoo0 + ooO0o00o . i11I1IiII1i1i
 plugintools . add_item (

 title = "Now 3" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIIi1I1IIii1II + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-3-high-res-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 28 - 28: IIiI1I11i11 - i1ii1I1111ii1
 plugintools . add_item (

 title = "Now 2" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Now-2-high-res-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 54 - 54: i1ii1I1111ii1 - iIIi1iI1II111 % ii1I1
 plugintools . add_item (

 title = "Now 1" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii1ii1ii + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/Copy-of-Now-1-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 73 - 73: iIIi1iI1II111 . o0O000OO + I1ii - OooooOOoo0 % OooooOOoo0 . OooooOOoo0
 plugintools . add_item (

 title = "Now Love" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOooO0 + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/81fscrdHwqL._SY355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 17 - 17: OOooOo0ooo - oOooOoO0Oo0O % OOooOo0ooo . iIiI1 / i11iIiiIii % i1ii1I1111ii1
 plugintools . add_item (

 title = "Now Party Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + Ii1I1Ii + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/611JRmqaeJL._SY355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 28 - 28: OooooOOoo0
 plugintools . add_item (

 title = "Now 70's" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOoO0 + "/" ,
 thumbnail = "https://dvfnvgxhycwzf.cloudfront.net/media/SharedImage/imageFull/.fJ9CxmfV/SharedImage-66971.jpg?t=981afaa7260072d9c38a" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 58 - 58: o0O000OO
 plugintools . add_item (

 title = "Now 80's" ,
 url = "plugin://plugin.video.youtube/playlist/" + iii + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/51JfEwWWzXL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 37 - 37: IIIii1I - ii11i / I11iI1i1I11I11
 plugintools . add_item (

 title = "Now 90's" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOooOOOoOo + "/" ,
 thumbnail = "http://tesco.scene7.com/is/image/tesco/493-2421_PI_1000025MN?wid=493&ht=538" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 73 - 73: i11iIiiIii - iIiI1
 plugintools . add_item (

 title = "Now 00's" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1Iii1i1I + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/91efRJeXg2L._SL1500_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 25 - 25: oOooOoO0Oo0O + iIiI1 * I11iI1i1I11I11
 plugintools . add_item (

 title = "Now 20TH Century" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOI1iI1ii1II + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2017/04/NOW_Century-1024x900.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 92 - 92: I1ii + OooooOOoo0 + iIIi1iI1II111 / ooO0o00o + O00Oo0
 plugintools . add_item (

 title = "Now 21st Century" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiI111111IIII + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/91wmfiSXm0L._SL1500_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 18 - 18: OOOOo0o00OO0000 * o0O000OO . i1ii1I1111ii1 / I11iI1i1I11I11 / i11iIiiIii
 plugintools . add_item (

 title = "Now N0.1 Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0O0OOOOoo + "/" ,
 thumbnail = "http://i84.fastpic.ru/big/2016/1128/a9/3afbdd1a8903ef8496242c0ba3f485a9.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 21 - 21: i11I1IiII1i1i / I11iI1i1I11I11 + OOooOo0ooo + oOooOoO0Oo0O
 plugintools . add_item (

 title = "Now No.1's" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOoO00 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOWno1s.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 91 - 91: i11iIiiIii / IIiI1I11i11 + i1ii1I1111ii1 + OOOOo0o00OO0000 * i11iIiiIii
 plugintools . add_item (

 title = "Now DriveTime" ,
 url = "plugin://plugin.video.youtube/playlist/" + Iii1I1I11iiI1 + "/" ,
 thumbnail = "https://dvfnvgxhycwzf.cloudfront.net/media/SharedImage/imageFull/.frUQdOcV/SharedImage-65976.jpg?t=a73f00b48681f2349588" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 66 - 66: ii11i % IIiI1I11i11 - iIIi1iI1II111 + OooooOOoo0 * O00Oo0 . iIiI1
 plugintools . add_item (

 title = "Now Dance Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1I1i1I + "/" ,
 thumbnail = "https://is5-ssl.mzstatic.com/image/thumb/Music20/v4/9c/3b/d8/9c3bd822-6b25-30ba-4765-2cac381c47f0/886445987904.jpg/1200x630bb.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 52 - 52: OOOOo0o00OO0000 + iIIi1iI1II111 . i1ii1I1111ii1 . I11iI1i1I11I11 . iI
 plugintools . add_item (

 title = "Now Fitness " ,
 url = "plugin://plugin.video.youtube/playlist/" + oooooOoo0ooo + "/" ,
 thumbnail = "http://store.hmv.com/HMVStore/media/product/289482/01-289482.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 97 - 97: I1ii / i1ii1I1111ii1
 plugintools . add_item (

 title = "Now Brit Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1I1IiI1 + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61vsaOPz4TL._SY355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 71 - 71: IIiii / IIiI1I11i11 . I11iI1i1I11I11 % oOooOoO0Oo0O . o0O000OO
 plugintools . add_item (

 title = "Now Party Anthems" ,
 url = "plugin://plugin.video.youtube/playlist/" + III1iII1I1ii + "/" ,
 thumbnail = "https://store.hmv.com/HMVStore/media/product/153070/01-153070.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 41 - 41: IIiI1I11i11 * IIiii / oOooOoO0Oo0O . ii1I1
 plugintools . add_item (

 title = "Now Rock Ballads" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOo0O00o + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/81c4EY-95TL._SY355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 83 - 83: i1ii1I1111ii1 . iIIi1iI1II111 / IIIii1I / ii1I1 - IIiii
 plugintools . add_item (

 title = "Now Classic Rock" ,
 url = "plugin://plugin.video.youtube/playlist/" + oOOo0 + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/61IeOgC6FyL._SY300_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 100 - 100: iI
 plugintools . add_item (

 title = "Now Rock" ,
 url = "plugin://plugin.video.youtube/playlist/" + o00oooO0Oo + "/" ,
 thumbnail = "http://loudwire.com/files/2016/01/unnamed-10.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 46 - 46: o0O000OO / ii11i % i1ii1I1111ii1 . ii11i * i1ii1I1111ii1
 plugintools . add_item (

 title = "Now Pop" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo00O00oO + "/" ,
 thumbnail = "https://dvfnvgxhycwzf.cloudfront.net/media/SharedImage/imageFull/.fgn3yf9U/SharedImage-54831.jpg?t=6f021b9c4b26aa96d828" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 38 - 38: I11iI1i1I11I11 - i1ii1I1111ii1 / iIIi1iI1II111 . O00Oo0
 plugintools . add_item (

 title = "Now Disco" ,
 url = "plugin://plugin.video.youtube/playlist/" + iIiIIIi + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2016/11/NOW_Disco.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 45 - 45: O00Oo0
 plugintools . add_item (

 title = "Now Feel Good" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooo00OOOooO + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2016/11/NOW_Feel_Good.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 83 - 83: o0O000OO . oOooOoO0Oo0O
 plugintools . add_item (

 title = "Now Running" ,
 url = "plugin://plugin.video.youtube/playlist/" + O00OOOoOoo0O + "/" ,
 thumbnail = "http://tesco.scene7.com/is/image/tesco/521-8951_PI_1000025MN?id=6eebz3&fmt=jpg&fit=constrain,1&wid=250&hei=250" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 58 - 58: i11iIiiIii + oOooOoO0Oo0O % oOooOoO0Oo0O / iIiI1 / i11iIiiIii
 plugintools . add_item (

 title = "Now Song" ,
 url = "plugin://plugin.video.youtube/playlist/" + O000OOo00oo + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/61wQSnctNeL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 62 - 62: iI / I11iI1i1I11I11
 plugintools . add_item (

 title = "Now Singer" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo0OOo + "/" ,
 thumbnail = "https://dvfnvgxhycwzf.cloudfront.net/media/SharedImage/imageFull/.fA02I1_U/SharedImage-55818.jpg?t=e6cb933af396dee4e03d" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 7 - 7: oOooOoO0Oo0O . iIiI1
 plugintools . add_item (

 title = "Now House" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOOO00Ooo + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2016/11/NOW_House.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 53 - 53: OOooOo0ooo % OOooOo0ooo * ooO0o00o + o0O000OO
 plugintools . add_item (

 title = "Now Summer Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0O0ooOOO + "/" ,
 thumbnail = "https://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/2016/11/NOW_Summer_Hits.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 92 - 92: oOooOoO0Oo0O + IIiI1I11i11 / OOooOo0ooo * iIIi1iI1II111
 plugintools . add_item (

 title = "Now Summer Party" ,
 url = "plugin://plugin.video.youtube/playlist/" + IiIIIi1iIi + "/" ,
 thumbnail = "http://direct-ns.rhap.com/imageserver/v2/albums/Alb.189415979/images/500x500.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 100 - 100: OOOOo0o00OO0000 % ii11i * IIiii - i1ii1I1111ii1
 plugintools . add_item (

 title = "Now Summer" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooOOoooooo + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/611rXBxWeAL.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 92 - 92: OOOOo0o00OO0000
 plugintools . add_item (

 title = "Now Drive" ,
 url = "plugin://plugin.video.youtube/playlist/" + II1I + "/" ,
 thumbnail = "https://images-eu.ssl-images-amazon.com/images/I/61EoE0udUkL._SL500_AA280_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 22 - 22: IIIii1I % i1ii1I1111ii1 * I11iI1i1I11I11 / ii1I1 % i11iIiiIii * OooooOOoo0
 plugintools . add_item (

 title = "Now Movies" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0i1II1Iiii1I11 + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/81DGpRQX0EL._SX355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 95 - 95: oOooOoO0Oo0O - iIiI1 * I1ii + o0O000OO
 plugintools . add_item (

 title = "Now Disney" ,
 url = "plugin://plugin.video.youtube/playlist/" + IIII + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/819lN7C5loL._SL1500_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 10 - 10: ooO0o00o / i11iIiiIii
 plugintools . add_item (

 title = "Now Reggae" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiIiI + "/" ,
 thumbnail = "https://i.scdn.co/image/424aa797636f9477e07b1d168498c7c75c53a566" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 92 - 92: OooooOOoo0 . O00Oo0
 plugintools . add_item (

 title = "Now Country" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0O0OOO0Ooo + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/thumb/8/88/Nowcountryfeat.jpg/220px-Nowcountryfeat.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 85 - 85: I11iI1i1I11I11 . O00Oo0
 plugintools . add_item (

 title = "Now Legends" ,
 url = "plugin://plugin.video.youtube/playlist/" + iiIiII1 + "/" ,
 thumbnail = "https://artwork-cdn.7static.com/static/img/sleeveart/00/039/687/0003968720_500.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 78 - 78: OOOOo0o00OO0000 * O00Oo0 + ii11i + ii11i / O00Oo0 . OOooOo0ooo
 plugintools . add_item (

 title = "Now Power Ballads" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOO00O0O + "/" ,
 thumbnail = "http://img15.nnm.me/e/7/5/1/1/8b4a5c0dd668f2997a8e09f1695_prev.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 97 - 97: OOOOo0o00OO0000 / O00Oo0 % IIiI1I11i11 % I11iI1i1I11I11
 plugintools . add_item (

 title = "Now Chilled" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1Ii + "/" ,
 thumbnail = "https://images-eu.ssl-images-amazon.com/images/I/61Q9IGKQZBL._SL500_AA280_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 18 - 18: ii11i % OooooOOoo0
 plugintools . add_item (

 title = "Now Musicals" ,
 url = "plugin://plugin.video.youtube/playlist/" + ii111iI1iIi1 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOWMusicals2.png" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 95 - 95: OOOOo0o00OO0000 + i11iIiiIii * O00Oo0 - IIiI1I11i11 * O00Oo0 - ii11i
 plugintools . add_item (

 title = "Now USA" ,
 url = "plugin://plugin.video.youtube/playlist/" + OOO + "/" ,
 thumbnail = "http://ecx.images-amazon.com/images/I/81nq7JhBUUL._SL1417_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 75 - 75: oOooOoO0Oo0O * iIiI1
 plugintools . add_item (

 title = "Now 25 Years" ,
 url = "plugin://plugin.video.youtube/playlist/" + oo0OOo0 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOW-25-Years.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 9 - 9: iIiI1 - IIiii + iIIi1iI1II111 / ii11i / i11iIiiIii
 plugintools . add_item (

 title = "Now 30 Years" ,
 url = "plugin://plugin.video.youtube/playlist/" + I11IiI + "/" ,
 thumbnail = "http://thelatest.co.uk/files/2013/05/Now-30-Years-Sleeve.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 39 - 39: iIiI1 * IIIii1I + ii11i - iIiI1 + ii1I1
 plugintools . add_item (

 title = "Now R&B" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0ooO0Oo00o + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/nowrb.jpeg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 69 - 69: iIIi1iI1II111
 plugintools . add_item (

 title = "Now Million" ,
 url = "plugin://plugin.video.youtube/playlist/" + ooO0oOOooOo0 + "/" ,
 thumbnail = "http://www.officialcharts.com/media/318845/now_thats_what_i_call_a_million.jpg?width=500&height=500" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 85 - 85: OOOOo0o00OO0000 / iIIi1iI1II111
 plugintools . add_item (

 title = "Now Club Hits" ,
 url = "plugin://plugin.video.youtube/playlist/" + i1I1ii11i1Iii + "/" ,
 thumbnail = "http://imgcache.qq.com/music/photo/album_300/48/300_albumpic_448848_0.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 18 - 18: ooO0o00o % iIIi1iI1II111 * I11iI1i1I11I11
 plugintools . add_item (

 title = "Now Love" ,
 url = "plugin://plugin.video.youtube/playlist/" + o0OIiII + "/" ,
 thumbnail = "https://upload.wikimedia.org/wikipedia/en/e/e2/Now_That's_What_I_Call_Love_3.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 62 - 62: O00Oo0 . iIiI1 . oOooOoO0Oo0O
 plugintools . add_item (

 title = "Now Music" ,
 url = "plugin://plugin.video.youtube/playlist/" + I1IiiiiI + "/" ,
 thumbnail = "http://a1491.phobos.apple.com/us/r30/Purple4/v4/c2/b7/97/c2b79704-18bf-960c-f5f6-877b12af4af1/mzl.vmknkzkm.png" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 11 - 11: ii1I1 / OooooOOoo0
 plugintools . add_item (

 title = "Now Xmas 2015" ,
 url = "plugin://plugin.video.youtube/playlist/" + O0oO0 + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/20150814114319/Christmas_Hi_Res-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 73 - 73: IIiI1I11i11 / i11iIiiIii
 plugintools . add_item (

 title = "Now Xmas 2014" ,
 url = "plugin://plugin.video.youtube/playlist/" + oO0O0OO0O + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOW-XMAS-2013-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 58 - 58: IIIii1I . IIiii + i11I1IiII1i1i - i11iIiiIii / IIiii / iIIi1iI1II111
 plugintools . add_item (

 title = "Now Xmas 2012" ,
 url = "plugin://plugin.video.youtube/playlist/" + OO + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOW-Xmas-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 85 - 85: o0O000OO + ii1I1
 plugintools . add_item (

 title = "Now The Christmas Album 2000" ,
 url = "plugin://plugin.video.youtube/playlist/" + OoOoO + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOW-The-Christmas-Album.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 10 - 10: iIiI1 / iI + o0O000OO / IIiI1I11i11
 plugintools . add_item (

 title = "Now Xmas Vinyl" ,
 url = "plugin://plugin.video.youtube/playlist/" + OO0Oooo0oOO0O + "/" ,
 thumbnail = "https://images-na.ssl-images-amazon.com/images/I/51Ph69xCoXL._SX355_.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 27 - 27: OOooOo0ooo
 plugintools . add_item (

 title = "Now The Christmas Album 1985" ,
 url = "plugin://plugin.video.youtube/playlist/" + Ii1I1i + "/" ,
 thumbnail = "http://cdn.smehost.net/nowmusiccom-ukprod/wp-content/uploads/NOW-Xmas-Album-150x150.jpg" ,
 fanart = "http://cypher-media.com/cypher/images/fanartnow.jpg" ,
 folder = True )
 if 67 - 67: I1ii
oO00oOOoooO ( ) # dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
]')